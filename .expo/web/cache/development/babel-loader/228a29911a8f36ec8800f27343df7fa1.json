{"ast":null,"code":"var _jsxFileName = \"/home/poppin/Documents/My_Snapchat/pages/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useForm } from \"react-hook-form\";\nimport { color } from 'react-native-reanimated';\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\nexport default function LoginPage() {\n  var _useForm = useForm(),\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    return Alert.alert(\"Form Data\", JSON.stringify(data));\n  };\n\n  useEffect(function () {\n    register({\n      name: \"email\"\n    }, {\n      required: true\n    });\n    register({\n      name: \"password\"\n    }, {\n      required: true\n    });\n  }, [register]);\n  return React.createElement(View, {\n    style: {\n      backgroundColor: 'yellow',\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      margin: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 50,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }\n  }, \"Login\")), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    style: {\n      height: 40,\n      width: 200,\n      borderColor: 'grey',\n      borderWidth: 1,\n      backgroundColor: 'white',\n      borderRadius: 5\n    },\n    onChangeText: function onChangeText(text) {\n      return setValue(\"email\", text, true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), errors.email && React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }\n  }, \"This is required.\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    style: {\n      height: 40,\n      width: 200,\n      borderColor: 'grey',\n      borderWidth: 1,\n      backgroundColor: 'white',\n      borderRadius: 5\n    },\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setValue(\"password\", text, true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), errors.password && React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 27\n    }\n  }, \"This is required.\"), React.createElement(Button, {\n    title: \"Valider\",\n    onPress: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/poppin/Documents/My_Snapchat/pages/Login.js"],"names":["React","useState","useEffect","useForm","color","Colors","LoginPage","register","setValue","handleSubmit","errors","onSubmit","data","Alert","alert","JSON","stringify","name","required","backgroundColor","flex","justifyContent","alignItems","margin","fontSize","fontWeight","height","width","borderColor","borderWidth","borderRadius","text","email","password"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TextInput, Alert, Button } from 'react-native';\nimport { useForm } from \"react-hook-form\";\nimport { color } from 'react-native-reanimated';\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\n\n\n\nexport default function LoginPage() {\n\n  const { register, setValue, handleSubmit, errors } = useForm();\n  const onSubmit = data => Alert.alert(\"Form Data\", JSON.stringify(data));\n\n  useEffect(() => {\n    register({ name: \"email\" }, { required: true });\n    register({ name: \"password\" }, { required: true });\n  }, [register]);\n\n  return (\n\n    \n    <View style={{\n      backgroundColor: 'yellow',\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }}>\n      <View style={{\n        margin: 30\n      }}\n      ><Text style={{ color : 'white', fontSize:50, fontWeight:'bold'}}>Login</Text></View>\n      <Text>Email</Text>\n      <TextInput\n        style={{ height: 40, width : 200, borderColor: 'grey', borderWidth: 1, backgroundColor : 'white', borderRadius : 5}}\n        onChangeText={text => setValue(\"email\", text, true)}\n      />\n      {errors.email && <Text>This is required.</Text>}\n      <Text>Password</Text>\n      <TextInput\n        style={{ height: 40, width : 200, borderColor: 'grey', borderWidth: 1, backgroundColor : 'white', borderRadius : 5 }}\n        secureTextEntry={true}\n        onChangeText={text => setValue(\"password\", text, true)}\n      />\n      {errors.password && <Text>This is required.</Text>}\n      <Button title='Valider' onPress={handleSubmit(onSubmit)}/>\n     \n    </View>\n  );\n\n\n}"]},"metadata":{},"sourceType":"module"}