{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/idriss/Bureau/SAMSUNG CAMPUS/PROJECT/GroupAziz/My_Snapchat/My_Snapchat/pages/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { useForm } from \"react-hook-form\";\nimport { color } from 'react-native-reanimated';\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\nimport HomePage from \"./Home\";\nexport default function LoginPage(_ref) {\n  var navigate = _ref.navigate;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  onSubmit = function onSubmit(data) {\n    var response, user;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://snapi.epitech.eu/connection', {\n              method: 'POST',\n              body: JSON.stringify(data),\n              headers: new Headers({\n                'Content-Type': 'application/json'\n              })\n            }).then(function (response) {\n              return response.json();\n            }));\n\n          case 2:\n            response = _context.sent;\n\n            if (!(response.data.token === undefined)) {\n              _context.next = 7;\n              break;\n            }\n\n            console.log('response.data.token');\n            _context.next = 14;\n            break;\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", response.data.token));\n\n          case 9:\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 11:\n            user = _context.sent;\n            console.log('success :' + user);\n            return _context.abrupt(\"return\", React.createElement(View, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 9\n              }\n            }, React.createElement(Button, {\n              title: \"TEST\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 11\n              }\n            })));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    register({\n      name: \"email\"\n    }, {\n      required: true\n    });\n    register({\n      name: \"password\"\n    }, {\n      required: true\n    });\n  }, [register]);\n\n  displayData = function displayData() {\n    var found, user;\n    return _regeneratorRuntime.async(function displayData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            found = false;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 3:\n            user = _context2.sent;\n            alert(user);\n            console.log(user);\n\n            if (user !== null) {\n              alert(user);\n              found = true;\n            }\n\n            return _context2.abrupt(\"return\", found);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (displayData() == true) {\n    alert(displayData());\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, React.createElement(Button, {\n      title: \"TEST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      style: {\n        backgroundColor: 'yellow',\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        margin: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 50,\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 10\n      }\n    }, \"Login\")), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, \"Email\"), React.createElement(TextInput, {\n      style: {\n        height: 40,\n        width: 200,\n        borderColor: 'grey',\n        borderWidth: 1,\n        backgroundColor: 'white',\n        borderRadius: 5\n      },\n      onChangeText: function onChangeText(text) {\n        return setValue(\"email\", text, true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }), errors.email && React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 26\n      }\n    }, \"This is required.\"), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, \"Password\"), React.createElement(TextInput, {\n      style: {\n        height: 40,\n        width: 200,\n        borderColor: 'grey',\n        borderWidth: 1,\n        backgroundColor: 'white',\n        borderRadius: 5\n      },\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setValue(\"password\", text, true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }), errors.password && React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, \"This is required.\"), React.createElement(Button, {\n      title: \"Valider\",\n      onPress: handleSubmit(onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/home/idriss/Bureau/SAMSUNG CAMPUS/PROJECT/GroupAziz/My_Snapchat/My_Snapchat/pages/Login.js"],"names":["React","useState","useEffect","useForm","color","Colors","HomePage","LoginPage","navigate","register","setValue","handleSubmit","errors","onSubmit","data","fetch","method","body","JSON","stringify","headers","Headers","then","response","json","token","undefined","console","log","AsyncStorage","setItem","getItem","user","name","required","displayData","found","alert","backgroundColor","flex","justifyContent","alignItems","margin","fontSize","fontWeight","height","width","borderColor","borderWidth","borderRadius","text","email","password"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TextInput, Alert, Button, AsyncStorage } from 'react-native';\nimport { useForm } from \"react-hook-form\";\nimport { color } from 'react-native-reanimated';\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\nimport HomePage from \"./Home\";\n\n\n\nexport default function LoginPage({ navigate }) {\n\n  const { register, setValue, handleSubmit, errors } = useForm();\n  // const onSubmit = data => Alert.alert(\"Form Data\", JSON.stringify(data));\n\n  // useEffect(() => {\n  //   register({ name: \"email\" }, { required: true });\n  //   register({ name: \"password\" }, { required: true });\n  // }, [register]);\n\n  onSubmit = async (data) => {\n    // console.log(data.email);\n    // console.log(data.password);\n    // console.log(data)\n    // fetch('http://snapi.epitech.eu/inscription', {\n    //   method: 'POST',\n    //   headers: {\n    //     Accept: 'application/json',\n    //     'Content-Type': 'application/json'\n    //   },\n    //   body: JSON.stringify({\n    //     email: data.email,\n    //     password: data.password\n    //   })\n    // });\n    const response = await fetch('http://snapi.epitech.eu/connection', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    })/* .then(res => res.json())\n      .catch(error => console.error('Error: ', error))\n      .then(response => console.log('Success: ', response.data.token),\n      ) */\n      .then((response) => response.json())\n    if (response.data.token === undefined)\n      console.log('response.data.token');\n    else {\n      await AsyncStorage.setItem(\"token\", response.data.token);\n      // this.setState({showHome: true});\n      // console.log(response.data.token);\n      let user = await AsyncStorage.getItem('token');\n      // let parsed = JSON.parse(user);  \n      // console.log('success :' + parsed.token); \n      console.log('success :' + user);\n      return (\n        <View>\n          <Button title=\"TEST\"></Button>\n        </View>\n      )\n\n\n    }\n    // .then((response) => {\n    //   console.log(response);\n    // //  AsyncStorage.setItem('userData', response.data.token)\n    // //  let user = AsyncStorage.getItem('userData');  \n    // //  console.log('success :' + user);  \n\n\n\n    //   // return navigate('HomePage')\n\n    // })\n  }\n  useEffect(() => {\n    register({ name: \"email\" }, { required: true });\n    register({ name: \"password\" }, { required: true });\n  }, [register]);\n\n\n  // displayData = async () => {\n  //   try {\n  //     let user = await AsyncStorage.getItem('userData');\n  //     let parsed = JSON.parse(user);\n  //     console.log('success :' + parsed.token);\n\n  //     alert(parsed.token);\n  //   }\n  //   catch (error) {\n  //     alert(error)\n  //   }\n  // }\n  displayData = async () => {\n    var found = false;\n    // try {\n      let user =  await AsyncStorage.getItem('token');\n      // let parsed = JSON.parse(user);  \n      alert(user);\n      console.log(user);\n      if (user !== null) {\n        alert(user);\n\n        found = true\n      }\n    // }\n    // catch (error) {\n    //   alert(error)\n    // }\n    return  found\n  }\n\n  if (displayData() == true) {\n    alert(displayData())\n\n\n    return (\n      <View>\n        <Button title=\"TEST\"></Button>\n      </View>\n    )\n\n  } else {\n    return (\n\n\n      <View style={{\n        backgroundColor: 'yellow',\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n\n      }}>\n\n        <View style={{\n          margin: 30\n        }}\n\n        ><Text style={{ color: 'white', fontSize: 50, fontWeight: 'bold' }}>Login</Text></View>\n        <Text>Email</Text>\n        <TextInput\n          style={{ height: 40, width: 200, borderColor: 'grey', borderWidth: 1, backgroundColor: 'white', borderRadius: 5 }}\n          onChangeText={text => setValue(\"email\", text, true)}\n        />\n        {errors.email && <Text>This is required.</Text>}\n        <Text>Password</Text>\n        <TextInput\n          style={{ height: 40, width: 200, borderColor: 'grey', borderWidth: 1, backgroundColor: 'white', borderRadius: 5 }}\n          secureTextEntry={true}\n          onChangeText={text => setValue(\"password\", text, true)}\n        />\n        {errors.password && <Text>This is required.</Text>}\n        <Button title='Valider' onPress={handleSubmit(onSubmit)} />\n\n      </View>\n    )\n\n\n  }\n\n\n\n}"]},"metadata":{},"sourceType":"module"}